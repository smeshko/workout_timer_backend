name: test
on: [push]
defaults:
  run:
    shell: bash
jobs:
  test_on_ubuntu_xenial:
    strategy:
      matrix:
        dbimage: ['postgres:12']
        include:
          - installcmd: 'apt-get -q update && apt-get -q install -y postgresql-client'
    container: 
      image: vapor/swift:5.2.2-xenial-ci
    runs-on: ubuntu-latest
    services:
      postgres:
        image: ${{ matrix.dbimage }}
        env: { POSTGRES_USER: test, POSTGRES_PASSWORD: test, POSTGRES_DB: test }
    env: { 'PGPASSWORD': 'test' }
    steps:
      - name: Install dependencies
        run: ${{ matrix.installcmd }}
      - name: Wait for Postgres server to be ready
        run: until echo | psql -hpostgres -Utest test; do sleep 1; done
        timeout-minutes: 5
      - name: Set up Postgres databases and privileges
        run: |
#          dropdb test
          createdb -hpostgres -Utest -Otest test
      - name: Check out code
        uses: actions/checkout@v2
      - name: Run tests with Thread Sanitizer
        run: swift test --enable-test-discovery --sanitize=thread
        env: { 'POSTGRES_HOSTNAME': 'localhost' }
  # PR-tests-macos:
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include: 
  #         - {'formula': 'postgresql@11', 'datadir': 'postgresql@11'}
  #         - {'formula': 'postgresql@12', 'datadir': 'postgres'}
  #   runs-on: macos-latest
  #   env: { 'PGPASSWORD': 'vapor_password' }
  #   steps:
  #     - name: Select latest available Xcode
  #       uses: maxim-lobanov/setup-xcode@1.0
  #       with: { 'xcode-version': 'latest' }
  #     - name: Blow away the default Postgres installation
  #       run: brew uninstall --force postgresql php && rm -rf /usr/local/{etc,var}/{postgres,pg}*
  #     - name: Install Postgres server from Homebrew
  #       run: brew install ${{ matrix.formula }} && brew link --force ${{ matrix.formula }} 
  #     - name: Make sure Postgres has a database, Homebrew fails REALLY bad at this
  #       run: initdb --locale=C -E UTF-8 $(brew --prefix)/var/${{ matrix.datadir }}
  #     - name: Start Postgres server
  #       run: brew services start ${{ matrix.formula }}
  #     - name: Wait for Postgres server to be ready
  #       run: until echo | psql postgres; do sleep 1; done
  #       timeout-minutes: 5
  #     - name: Set up Postgres databases and privileges
  #       run: |
  #         createuser --createdb --login vapor_username
  #         for db in vapor_{database,migration_extra}; do
  #           createdb -Ovapor_username $db && psql $db <<<"ALTER SCHEMA public OWNER TO vapor_username;"
  #         done
  #     - name: Check out code
  #       uses: actions/checkout@v2
  #     - name: Run tests with Thread Sanitizer
  #       run: swift test --enable-test-discovery --sanitize=thread
